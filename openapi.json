{
  "openapi": "3.0.2",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/api/users/singup": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User",
        "description": "Create new users:\n- **username**: Username must contain only [a-z] or/and [A-Z] or/and [0-9] and length between 4-15.\n- **password**:Password must contain at least 1 character [A-Z and 0-9] and min length 8 characters.\n- **email**: Must be valid\n- username and email **must be unique**",
        "operationId": "create_user_api_users_singup_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Login",
        "operationId": "login_api_users_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_api_users_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/posts/": {
      "get": {
        "tags": [
          "posts"
        ],
        "summary": "Get All Posts",
        "description": "- Return json of posts list.\n- Example:   {\n\"title\": \"string\",\n\"description\": \"string\",\n\"id\": 3,\n\"likes\": 1,\n\"dislikes\": 2,\n\"author\": 1\n},\n{...}",
        "operationId": "get_all_posts_api_posts__get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get All Posts Api Posts  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PostInDB"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "posts"
        ],
        "summary": "Create New Post",
        "description": "Create new post:\n- **title**: length must be [1-150]\n- **description**:length must be [1-5000]\n- Return json.\n- Example:   {\n\"title\": \"string\",\n\"description\": \"string\",\n\"id\": 3,\n\"likes\": 1,\n\"dislikes\": 2,\n\"author\": 1\n}",
        "operationId": "create_new_post_api_posts__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/posts/{post_id}": {
      "get": {
        "tags": [
          "posts"
        ],
        "summary": "Get Post",
        "description": "- Return json.\n- Example:   {\n\"title\": \"string\",\n\"description\": \"string\",\n\"id\": 3,\n\"likes\": 1,\n\"dislikes\": 2,\n\"author\": 1\n}",
        "operationId": "get_post_api_posts__post_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Post Id",
              "type": "integer"
            },
            "name": "post_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "posts"
        ],
        "summary": "Delete Post",
        "description": "- Return json.\n- Example:   {\"Message\": \"Post deleted\"}",
        "operationId": "delete_post_api_posts__post_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Post Id",
              "type": "integer"
            },
            "name": "post_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "posts"
        ],
        "summary": "Edit Post",
        "description": "- **title**: length must be [1-150]\n- **description**:length must be [1-5000]\n- Return json.\n- Example:   {\n\"title\": \"string\",\n\"description\": \"string\",\n}",
        "operationId": "edit_post_api_posts__post_id__patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Post Id",
              "type": "integer"
            },
            "name": "post_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostInDB"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/posts/like/{post_id}": {
      "post": {
        "tags": [
          "posts"
        ],
        "summary": "Add Or Remove Like",
        "description": "- Return json.\n- Example:   {\"likes\": value}",
        "operationId": "add_or_remove_like_api_posts_like__post_id__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Post Id",
              "type": "integer"
            },
            "name": "post_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/posts/dislike/{post_id}": {
      "post": {
        "tags": [
          "posts"
        ],
        "summary": "Add Or Remove Dislike",
        "description": "- Return json.\n- Example:   {\"dislikes\": value}",
        "operationId": "add_or_remove_dislike_api_posts_dislike__post_id__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Post Id",
              "type": "integer"
            },
            "name": "post_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Body_login_api_users_login_post": {
        "title": "Body_login_api_users_login_post",
        "required": [
          "username",
          "password"
        ],
        "type": "object",
        "properties": {
          "grant_type": {
            "title": "Grant Type",
            "pattern": "password",
            "type": "string"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "scope": {
            "title": "Scope",
            "type": "string",
            "default": ""
          },
          "client_id": {
            "title": "Client Id",
            "type": "string"
          },
          "client_secret": {
            "title": "Client Secret",
            "type": "string"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "PostCreate": {
        "title": "PostCreate",
        "required": [
          "title",
          "description"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          }
        }
      },
      "PostInDB": {
        "title": "PostInDB",
        "required": [
          "title",
          "description",
          "id",
          "author"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "likes": {
            "title": "Likes",
            "type": "integer"
          },
          "dislikes": {
            "title": "Dislikes",
            "type": "integer"
          },
          "author": {
            "title": "Author",
            "type": "integer"
          }
        }
      },
      "PostUpdate": {
        "title": "PostUpdate",
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          }
        }
      },
      "Token": {
        "title": "Token",
        "required": [
          "access_token",
          "token_type"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "title": "Access Token",
            "type": "string"
          },
          "token_type": {
            "title": "Token Type",
            "type": "string"
          }
        }
      },
      "UserCreate": {
        "title": "UserCreate",
        "required": [
          "username",
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "username": {
            "title": "Username",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "password": {
            "title": "Password",
            "type": "string"
          }
        }
      },
      "UserInDB": {
        "title": "UserInDB",
        "required": [
          "username",
          "email"
        ],
        "type": "object",
        "properties": {
          "username": {
            "title": "Username",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "api/users/login"
          }
        }
      }
    }
  }
}